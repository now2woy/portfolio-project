pipeline {
    agent any

    environment {
        REGISTRY = "localhost:5000"
        IMAGE_NAME = "now2woy/portfolio-front"
        IMAGE_TAG = "${GIT_COMMIT}"
        NODE_VERSION = 'NodeJS22'
        REGISTRY_USER = credentials('DOCKER_REGISTRY_USER')
        REGISTRY_PASS = credentials('DOCKER_REGISTRY_PASS')
        NEXT_PUBLIC_API_URL = credentials('NEXT_PUBLIC_API_URL')
        JENKINS_WORKSPACE = credentials('JENKINS_WORKSPACE')
        NGINX_STATIC_DIR = credentials('NGINX_STATIC_DIR')
		K8S_NAMESPACE = "portfolio"
		K8S_DEPLOYMENT = "frontend"
    }

    tools {
        nodejs NODE_VERSION
    }

    stages {
        stage('Checkout') {
            steps {
				git branch: 'main',
				url: 'https://github.com/now2woy/portfolio-project.git',
				credentialsId: 'GIT-HUB-NOW2WOY'
            }
        }

        stage('Install Dependencies') {
            steps {
                dir('apps/frontend') {
                    sh 'npm install'
                }
            }
        }

        stage('Docker Login') {
            steps {
                sh """
                    echo "${REGISTRY_PASS}" | docker login ${REGISTRY} -u "${REGISTRY_USER}" --password-stdin
                """
            }
        }

        stage('Build & Push Image') {
            steps {
                dir('apps/frontend') {
                    sh """
                        npm ci
                        NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL} npm run build

                        # 빌드 (commit hash 태그로)
                        docker build --build-arg NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL} -t ${REGISTRY}/${IMAGE_NAME}:${IMAGE_TAG} .

                        # latest 태그도 추가
                        docker tag ${REGISTRY}/${IMAGE_NAME}:${IMAGE_TAG} ${REGISTRY}/${IMAGE_NAME}:latest

                        # 두 개 다 푸시
                        docker push ${REGISTRY}/${IMAGE_NAME}:${IMAGE_TAG}
                        docker push ${REGISTRY}/${IMAGE_NAME}:latest
                    """
                }
            }
        }

		stage('Deploy to Kubernetes') {
			steps {
				sh """
                    # 커밋 해시 태그 기준으로 배포 (히스토리 추적용)
					kubectl set image deployment/${K8S_DEPLOYMENT} ${K8S_DEPLOYMENT}=${REGISTRY}/${IMAGE_NAME}:${IMAGE_TAG} -n ${K8S_NAMESPACE}
					
					kubectl rollout status deployment/${K8S_DEPLOYMENT} -n ${K8S_NAMESPACE}
				"""
			}
		}
    }
}
